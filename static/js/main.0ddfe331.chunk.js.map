{"version":3,"sources":["containers/Pokemon.js","containers/GetAditionalInfo.js","containers/Pokedex.js","containers/GetInfoPokemon.js","App.js","serviceWorker.js","index.js"],"names":["Pokemon","pokemon","react_default","a","createElement","id","src","Imagen","GetAditionalInfo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","test","console","log","state","fetched","loading","_this2","fetch","Url","then","response","json","data","setState","newprop","_this3","content","_this$state","types","abilities","forEach","element","push","type","name","ability","toString","height","weight","Component","Pokedex","url","replace","className","onClick","handleClickNext","handleClickPrev","containers_GetAditionalInfo","React","PureComponent","GetInfoPokemon","updatePage","render","initialPokemon","list","results","containers_Pokedex","App","width","GetInfoPokemon_GetInfoPokemon","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ddfe331.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function Pokemon(pokemon){\r\n        return(\r\n            <div id=\"picture\">\r\n                <img src={pokemon.Imagen} />\r\n            </div>\r\n        )\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nclass GetAditionalInfo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          pokemon : null,\r\n          fetched : false,\r\n          loading : false\r\n        };\r\n      }\r\n    test = () => {\r\n      console.log();\r\n    }\r\n\r\n    componentWillMount(){\r\n      \r\n      fetch(this.props.Url)\r\n        .then(response => response.json())\r\n        .then(data=>{\r\n            this.setState({\r\n              pokemon : data,\r\n              loading : true,\r\n              fetched : true\r\n            }, this.test);\r\n          });\r\n    }\r\n    componentWillReceiveProps(newprop){\r\n      console.log(\"componentWillReceiveProps\", newprop, this.props.Url)\r\n      fetch(newprop.Url)\r\n      .then(response => response.json())\r\n      .then(data=>{\r\n          this.setState({\r\n            pokemon : data,\r\n            loading : true,\r\n            fetched : true\r\n          });\r\n        });\r\n    }    \r\n    render(){\r\n        console.log(\"esta es la url en aditionalinfo!!!\", this.props.Url)\r\n        const {fetched, loading, pokemon} = this.state;\r\n        let types = [];\r\n        let abilities = [];\r\n\r\n        let content ;\r\n        if(fetched){\r\n            pokemon.types.forEach(element => {\r\n                types.push(element.type.name)\r\n            });\r\n\r\n            pokemon.abilities.forEach(element => {\r\n                abilities.push(element.ability.name)\r\n            });\r\n            content = <div>\r\n                        <strong>Name :</strong> {pokemon.name}<br/>\r\n                        <strong>Type :</strong> {types.toString()}<br/>\r\n                        <strong>Abilities :</strong> {abilities.toString()}<br/>\r\n                        <strong>Height :</strong> {pokemon.height}<br/>\r\n                        <strong>Weight :</strong> {pokemon.weight} lbs.\r\n                      </div>\r\n            ;\r\n        }else if(loading && !fetched){\r\n            content = <p> Loading...</p>;\r\n        }\r\n        else{\r\n            content = <div/>;\r\n        }\r\n        return(\r\n            <div id=\"stats\">\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetAditionalInfo","import React  from 'react';\r\nimport Pokemon  from './Pokemon';\r\nimport GetAditionalInfo from './GetAditionalInfo';\r\n\r\nlet URL_IMAGES = 'https://img.pokemondb.net/sprites/omega-ruby-alpha-sapphire/dex/normal/NOMBRE.png';\r\n\r\n class Pokedex extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n         console.log(\"entro a pokedex\",this.props.url)\r\n    return(\r\n    <div id=\"pokedex\">\r\n        <div id=\"left\">\r\n            <div id=\"logo\"></div>\r\n            <div id=\"bg_curve1_left\"></div>\r\n            <div id=\"bg_curve2_left\"></div>\r\n            <div id=\"curve1_left\">\r\n            <div id=\"buttonGlass\">\r\n                <div id=\"reflect\"> </div>\r\n            </div>\r\n            <div id=\"miniButtonGlass1\"></div>\r\n            <div id=\"miniButtonGlass2\"></div>\r\n            <div id=\"miniButtonGlass3\"></div>\r\n            </div>\r\n            <div id=\"curve2_left\">\r\n            <div id=\"junction\">\r\n                <div id=\"junction1\"></div>\r\n                <div id=\"junction2\"></div>\r\n            </div>\r\n            </div>\r\n            <div id=\"screen\">\r\n            <div id=\"topPicture\">\r\n                <div id=\"buttontopPicture1\"></div>\r\n                <div id=\"buttontopPicture2\"></div>\r\n            </div>\r\n            <Pokemon Imagen={URL_IMAGES.replace(\"NOMBRE\", this.props.name)}/>\r\n            <div id=\"buttonbottomPicture\"></div>\r\n            <div id=\"speakers\">\r\n                <div className=\"sp\"></div>\r\n                <div className=\"sp\"></div>\r\n                <div className=\"sp\"></div>\r\n                <div className=\"sp\"></div>\r\n            </div>\r\n            </div>\r\n            <div id=\"bigbluebutton\"></div>\r\n            <div id=\"barbutton1\"></div>\r\n            <div id=\"barbutton2\"></div>\r\n            <div id=\"cross\">\r\n            <div id=\"leftcross\">\r\n                <div id=\"leftT\"></div>\r\n            </div>\r\n            <div id=\"topcross\" onClick={this.props.handleClickNext}>\r\n                <div id=\"upT\"></div>\r\n            </div>\r\n            <div id=\"rightcross\">\r\n                <div id=\"rightT\"></div>\r\n            </div>\r\n            <div id=\"midcross\">\r\n                <div id=\"midCircle\"></div>\r\n            </div>\r\n            <div id=\"botcross\" onClick={this.props.handleClickPrev}>\r\n                <div id=\"downT\"></div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"right\">\r\n        <GetAditionalInfo Url={this.props.url}/>\r\n        <div id=\"blueButtons1\">\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        </div>\r\n        <div id=\"blueButtons2\">\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        <div className=\"blueButton\"></div>\r\n        </div>\r\n        <div id=\"miniButtonGlass4\"></div>\r\n        <div id=\"miniButtonGlass5\"></div>\r\n        <div id=\"barbutton3\"></div>\r\n        <div id=\"barbutton4\"></div>\r\n        <div id=\"yellowBox1\"></div>\r\n        <div id=\"yellowBox2\"></div>\r\n        <div id=\"bg_curve1_right\"></div>\r\n        <div id=\"bg_curve2_right\"></div>\r\n        <div id=\"curve1_right\"></div>\r\n        <div id=\"curve2_right\"></div>\r\n    </div>\r\n    </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Pokedex;","import React, { PureComponent } from 'react';\r\nimport Pokedex from './Pokedex';\r\n\r\n\r\nconst URI_URL= 'http://pokeapi.co/api/v2/pokemon?limit=151'\r\n\r\nexport default class GetInfoPokemon extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          list : [],\r\n          fetched : false,\r\n          loading : false,\r\n          initialPokemon: 0\r\n        };\r\n      }\r\n    componentWillMount(){\r\n      fetch(URI_URL)\r\n        .then(response => response.json())\r\n        .then(data=>{\r\n            this.setState({\r\n              list : data.results,\r\n              loading : true,\r\n              fetched : true,\r\n              initialPokemon: 0\r\n            });\r\n          });\r\n    }\r\n    updatePage = () => {\r\n      this.render()\r\n    }    \r\n    handleClickNext = () => {\r\n      this.setState({\r\n          initialPokemon: this.state.initialPokemon+1,\r\n          loading : true,\r\n          fetched : true,\r\n        }, this.updatePage);\r\n      };\r\n    handleClickPrev = () => {\r\n      this.setState({\r\n        initialPokemon: this.state.initialPokemon-1,\r\n        loading : true,\r\n        fetched : true,\r\n      }, this.updatePage);\r\n    };\r\n    render(){\r\n      const {fetched, loading} = this.state;\r\n      let content ;\r\n      if(fetched){\r\n        console.log(this.state.list[this.state.initialPokemon].url)\r\n        content = <Pokedex name={this.state.list[this.state.initialPokemon].name} url={this.state.list[this.state.initialPokemon].url} handleClickNext={this.handleClickNext} handleClickPrev={this.handleClickPrev}/>\r\n        ;\r\n      }else if(loading && !fetched){\r\n          content = <p> Loading...</p>;\r\n      }\r\n      else{\r\n        content = <div/>;\r\n      }\r\n      return(<div>\r\n        {content}\r\n      </div>)\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport GetInfoPokemon from './containers/GetInfoPokemon';\r\n\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src=\"https://camo.githubusercontent.com/1a4b11888ddf9f2b7a9353d6b69503e634e8704c/68747470733a2f2f692e696d6775722e636f6d2f415975745a4f462e706e67\" width=\"500px\"/>\r\n        </header>\r\n        <GetInfoPokemon />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}